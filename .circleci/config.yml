version: 2.1

orbs:
    azure-cli: circleci/azure-cli@1.2.0
    helm: circleci/helm@0.2.3
    docker: circleci/docker@1.5.0

references:
    docker_auth: &docker_auth
        auth:
            username: xcomponentteam
            password: $DOCKERHUB_PASSWORD

    job_filters_tags_and_branches: &job_filters_tags_and_branches
        tags:
            only: /^[0-9]++\.[0-9]++/
        branches:
            only: /.*/
    job_filters_tags_and_master_and_develop: &job_filters_tags_and_master_and_develop
        tags:
            only: /^[0-9]++\.[0-9]++/
        branches:
            only:
                - master
                - develop
    job_filters_branches_only: &job_filters_branches_only
        branches:
            only: /.*/

    build_version_variables: &build_version_variables
        run:
            name: Define Build Version Variables
            command: |
                CIRCLE_BRANCH=${CIRCLE_BRANCH////-}
                if [[ -z "${CIRCLE_TAG}" ]]
                then
                  BUILD_VERSION_TAG="dev-${CIRCLE_BRANCH}"
                  BUILD_NUMBER=${CIRCLE_SHA1}
                else
                  BUILD_VERSION_TAG="${CIRCLE_TAG}"
                  BUILD_NUMBER=""
                fi
                echo "export BUILD_VERSION_TAG=$BUILD_VERSION_TAG" >> $BASH_ENV
                echo "export BUILD_NUMBER=$BUILD_NUMBER" >> $BASH_ENV
                source $BASH_ENV

    save_node: &save_node
        save_cache:
            name: Save node_modules for vuejs app
            key: v2-viv-wallet-app-{{ .Branch }}-{{ checksum "viv-wallet-app/package-lock.json" }}
            paths:
                - viv-wallet-app/node_modules

    restore_node: &restore_node
        restore_cache:
            name: Restore node_modules for vuejs app
            keys:
                - v2-viv-wallet-app-{{ .Branch }}-{{ checksum "viv-wallet-app/package-lock.json" }}
                - v2-viv-wallet-app-{{ .Branch }}-
                - v2-viv-wallet-app-
jobs:
    checkout:
        docker:
            - image: cimg/node:16.18
              <<: *docker_auth
        resource_class: small
        steps:
            - checkout
            - persist_to_workspace:
                  root: ~/project
                  paths:
                      - .
    webapp:
        docker:
            - image: cimg/node:16.18.0-browsers
              <<: *docker_auth
        working_directory: ~/project
        resource_class: large
        steps:
            - attach_workspace:
                  at: ~/project
            - *restore_node
            - *build_version_variables
            - setup_remote_docker:
                  docker_layer_caching: false
            - run:
                  name: Prepare
                  working_directory: viv-wallet-app
                  command: npm ci --legacy-peer-deps
            - run:
                  name: Lint
                  working_directory: viv-wallet-app
                  command: npm run lint
            - run:
                  name: Typecheck
                  working_directory: viv-wallet-app
                  command: npm run typecheck
            - run:
                  name: Build
                  working_directory: viv-wallet-app
                  command: |
                      export VUE_APP_PRODUCT_VERSION=${BUILD_VERSION_TAG}
                      npm run build
            - run:
                  name: Unit Test
                  working_directory: viv-wallet-app
                  command: npm run test:unit-ci
                  environment:
                      JEST_JUNIT_OUTPUT_DIR: ./reports/junit/
            - *save_node
            - run:
                  name: Build docker image
                  working_directory: viv-wallet-app
                  command: |
                      docker build . --tag xcomponent/viv-wallet-webapp:${CIRCLE_SHA1} --tag xcomponent/viv-wallet-webapp:${BUILD_VERSION_TAG}
            - run:
                  name: Push image to DockerHub
                  working_directory: viv-wallet-app
                  command: |
                      if [ -z "$DOCKERHUB_PASSWORD" ]
                      then
                          echo "No dockerhub token"
                      else
                          echo $DOCKERHUB_PASSWORD | docker login -u xcomponentteam --password-stdin
                          docker push xcomponent/viv-wallet-webapp:${CIRCLE_SHA1}
                          docker push xcomponent/viv-wallet-webapp:${BUILD_VERSION_TAG}
                      fi
            - store_test_results:
                  path: ./viv-wallet-app/reports/junit/
            - store_artifacts:
                  path: ./viv-wallet-app/reports/junit

    api:
        docker:
            - image: cimg/openjdk:11.0-browsers
              <<: *docker_auth
        working_directory: ~/project
        environment:
            MAVEN_OPTS: -Xmx3200m
        steps:
            - attach_workspace:
                  at: ~/project
            - restore_cache:
                  keys:
                      - v1-dependencies-{{ checksum "pom.xml" }}
                      - v1-dependencies-
            - *build_version_variables
            - setup_remote_docker:
                  docker_layer_caching: false
            - run: mvn dependency:go-offline
            - save_cache:
                  paths:
                      - ~/.m2
                  key: v1-dependencies-{{ checksum "pom.xml" }}
            - run:
                  command: mvn clean install
                  no_output_timeout: 20m
            - run:
                  name: Build docker image
                  working_directory: ViV-Wallet-api
                  command: |
                      docker build . --tag xcomponent/viv-wallet-api:${CIRCLE_SHA1} --tag xcomponent/viv-wallet-api:${BUILD_VERSION_TAG}
            - run:
                  name: Push image to DockerHub
                  working_directory: ViV-Wallet-api
                  command: |
                      if [ -z "$DOCKERHUB_PASSWORD" ]
                      then
                          echo "No dockerhub token"
                      else
                          echo $DOCKERHUB_PASSWORD | docker login -u xcomponentteam --password-stdin
                          docker push xcomponent/viv-wallet-api:${CIRCLE_SHA1}
                          docker push xcomponent/viv-wallet-api:${BUILD_VERSION_TAG}
                      fi

    helm_chart:
        executor: azure-cli/azure-docker
        resource_class: small
        steps:
            - attach_workspace:
                  at: ~/project
            - docker/install-docker
            - helm/install-helm-client:
                  version: v3.1.1
            - *build_version_variables
            - run:
                  name: Test
                  working_directory: ~/project/helm
                  command: |
                      helm lint -f values.yaml
            - run:
                  name: Package
                  working_directory: ~/project/helm
                  command: |
                      sed -i -e "s%#SHA1#%${BUILD_VERSION_TAG}%g" ./values.yaml
                      if [[ -n "${CIRCLE_TAG}" ]]
                      then
                      helm package . --app-version="${BUILD_VERSION_TAG}" --version="${CIRCLE_TAG}.0"
                      else
                      helm package . --app-version="${BUILD_VERSION_TAG}"
                      fi
            - setup_remote_docker:
                  docker_layer_caching: false
            - azure-cli/login-with-user-or-service-principal
            - run:
                  name: Publish chart
                  working_directory: ~/project/helm
                  command: |
                      CONTAINER_REGISTRY=x4bcontainerregistry
                      az acr login --name "$CONTAINER_REGISTRY"
                      az acr helm repo add --name "$CONTAINER_REGISTRY"

                      if [[ -n "${CIRCLE_TAG}" ]]
                      then
                      # this is a tag, the version we push here is the `official` one for this chart
                      # if the package version exists do not force the push
                      # we don't want to override any deployed version
                      az acr helm push --name "$CONTAINER_REGISTRY" *.tgz
                      elif [[ "${CIRCLE_BRANCH}" == "develop" ]]
                      then
                      # on a develop branch push dummy version '0.0.1' of the
                      # package, they will have an app version like 'dev-develop'
                      # if the package version exists we force the push
                      az acr helm push --force --name "$CONTAINER_REGISTRY" *.tgz || true
                      else
                      echo No need to publish a chart, this is not a tag or the develop branch
                      fi

workflows:
    viv_wallet:
        jobs:
            - checkout:
                  filters: *job_filters_tags_and_branches
            - webapp:
                  filters: *job_filters_tags_and_branches
                  requires:
                      - checkout
            - helm_chart:
                  filters: *job_filters_tags_and_master_and_develop
                  requires:
                      - checkout
            - api:
                  filters: *job_filters_tags_and_branches
                  requires:
                      - checkout
